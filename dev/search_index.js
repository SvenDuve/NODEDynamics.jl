var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = NODEDynamics","category":"page"},{"location":"#NODEDynamics","page":"Home","title":"NODEDynamics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for NODEDynamics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"NODEDynamics.jl learns a model of the environment. It works with the following environments:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pendulum\nAcrobot\nLunar Lander","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In the julia REPL, run","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/SvenDuve/NODEDynamics.jl\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package is not for general use. To be fully functional, it requires the following packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"RLTypes\nConda\nPyCall\nGymnasium, this is a slightly adapted version. The original package can be found here","category":"page"},{"location":"","page":"Home","title":"Home","text":"Run the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/SvenDuve/RLTypes.jl\")\nPkg.add(\"Conda\")\nPkg.add(\"PyCall\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then again within julia,","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Conda\nusing PyCall\nConda.pip(\"install\", \"git+https://github.com/SvenDuve/Gymnasium\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"Bring package into scope with","category":"page"},{"location":"","page":"Home","title":"Home","text":"using NODEDynamics","category":"page"},{"location":"#Example-usage","page":"Home","title":"Example usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Once the above is installed, the following code can be used to train an agent on data collected form 100 episodes of the Pendulum environment:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using NODEDynamics\nusing RLTypes\nmodel(Pendulum(), ModelParameter(collect_train=100, collect_test=10))","category":"page"},{"location":"","page":"Home","title":"Home","text":"For further parameters, see the code.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This function returns a data structure containing a trained model. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [NODEDynamics]","category":"page"},{"location":"#NODEDynamics.NODE-Tuple{Any, Any}","page":"Home","title":"NODEDynamics.NODE","text":"(m::NODE)(timestamps, datapoints)\n\nApply the NODE model to the given timestamps and datapoints.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.NODE-Tuple{Int64, Int64, Int64}","page":"Home","title":"NODEDynamics.NODE","text":"NODE(input_size::Int, ode_size::Int, output_size::Int)\n\nCreate a NODE model with the given input, ode and output size.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.accuracy-Tuple{Any, Any, Any}","page":"Home","title":"NODEDynamics.accuracy","text":"accuracy(y_true, y_pred, tolerance)\n\nCalculate the accuracy of the prediction given the true values and a tolerance.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.modelEnv-Tuple{RLTypes.ContinuousEnvironment, RLTypes.ModelParameter}","page":"Home","title":"NODEDynamics.modelEnv","text":"modelEnv(environment::ContinuousEnvironment, modelParams::ModelParameter)\n\nMain algorithm to train the continuous action model using the given environment and model parameters.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.modelEnv-Tuple{RLTypes.DiscreteEnvironment, RLTypes.ModelParameter}","page":"Home","title":"NODEDynamics.modelEnv","text":"modelEnv(environment::DiscreteEnvironment, modelParams::ModelParameter)\n\nMain algorithm to train the discrete action model using the given environment and model parameters.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.train_step!-Tuple{RLTypes.ContinuousEnvironment, Vararg{Any, 7}}","page":"Home","title":"NODEDynamics.train_step!","text":"train_step!(environment::ContinuousEnvironment, S, A, R, S´, T, fθ, model_opt)\n\nTrain the continuous action model using the given data with gradient descent.\n\n\n\n\n\n","category":"method"},{"location":"#NODEDynamics.train_step!-Tuple{RLTypes.DiscreteEnvironment, Any, Any, Any, Any, Any, Any, Any, RLTypes.EnvParameter}","page":"Home","title":"NODEDynamics.train_step!","text":"train_step!(environment::DiscreteEnvironment, S, A, R, S´, T, fθ, model_opt, ep::EnvParameter)\n\nTrain the discrete action model using the given data with gradient descent.\n\n\n\n\n\n","category":"method"}]
}
